{
  "permissions": {
    "allow": [
      "Bash(sed:*)",
      "Bash(npx vite build:*)",
      "Bash(npm:*)",
      "Bash(pkill:*)",
      "Bash(dir:*)",
      "Bash(npx vite:*)",
      "Bash(if exist node_modules rmdir /s /q node_modules)",
      "Read(H:\\Astral Core/**)",
      "Bash(powershell:*)",
      "Bash(npx tsc:*)",
      "Bash(git add:*)",
      "Bash(git push:*)",
      "Bash(git commit:*)",
      "Bash(node:*)",
      "Bash(rg:*)",
      "mcp__ide__getDiagnostics",
      "Bash(npx madge:*)",
      "Bash(grep:*)",
      "Bash(find:*)",
      "Bash(wc:*)",
      "Bash(git restore:*)",
      "Bash(npx depcheck:*)",
      "Bash(curl:*)",
      "Bash(npx eslint:*)",
      "Bash(python:*)",
      "Bash(awk:*)",
      "Bash(timeout 30s npm run typecheck)",
      "Bash(timeout 20s npx tsc --noEmit --project tsconfig.temp.json)",
      "Bash(del:*)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\components/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\components/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\components/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\components/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\views/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\views/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\components/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\components/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\components/**)",
      "Bash(timeout 10s npm run dev)",
      "WebFetch(domain:reactjs.org)",
      "WebFetch(domain:legacy.reactjs.org)",
      "Read(H:\\h\\Astral Core\\CoreV4/**)",
      "Read(H:\\h\\Astral Core\\CoreV4/**)",
      "Read(H:\\h\\Astral Core\\CoreV4/**)",
      "Read(H:\\h\\Astral Core\\CoreV4/**)",
      "Read(H:\\h\\Astral Core\\CoreV4/**)",
      "Read(H:\\h\\Astral Core\\CoreV4/**)",
      "Read(H:\\h\\Astral Core\\CoreV4/**)",
      "Read(H:\\h\\Astral Core\\CoreV4/**)",
      "Read(H:\\h\\Astral Core\\CoreV4/**)",
      "WebSearch",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\components/**)",
      "Read(C:\\Astral Projects\\Astral-Projects\\_Repos\\C\\src\\hooks/**)",
      "Bash(timeout 30 npx eslint . --ext .ts,.tsx,.js,.jsx --format compact)",
      "Bash(git checkout:*)",
      "Read(\\/**)",
      "Read(H:\\/**)",
      "WebFetch(domain:github.com)",
      "Read(H:\\/**)",
      "Bash(cat:*)",
      "Bash(git init:*)",
      "Bash(git config:*)",
      "Bash(gh repo create:*)"
    ],
    "deny": [],
    "ask": []
  }
}